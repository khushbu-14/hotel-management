--DROP TABLE ROOM_BOOKING_DB

  SET SERVEROUTPUT ON;
    
    -- TABLEC REATION PROCEDURE
    create or replace procedure ROOM_BOOKING_creation is table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='create table ROOM_BOOKING_DB(
                    RESRV_ID NUMBER GENERATED BY DEFAULT AS IDENTITY ,
                    BKNG_ID NUMBER NOT NULL,
                    GUEST_ID NUMBER NOT NULL,
                    NO_OF_GUEST NUMBER NOT NULL,
                    ROOM_TYP_ID NUMBER NOT NULL,
                    AMOUNT FLOAT NOT NULL,
                    AMENITY_ID NUMBER NOT NULL,
                    BKNG_TYP_ID NUMBER NOT NULL,
                    HOTEL_ID NUMBER NOT NULL,
                    NO_OF_ROOM INTEGER NOT NULL,
                    IS_MAIN CHAR(1) NOT NULL,
                    PRIMARY KEY(RESRV_ID),
                    FOREIGN KEY(GUEST_ID) REFERENCES GUEST_DB(GUEST_ID),
                    FOREIGN KEY(HOTEL_ID) REFERENCES HOTEL_DB(HOTEL_ID)
                    )';
                    
       EXECUTE IMMEDIATE table_name;
    end ROOM_BOOKING_creation;
    /
    
      DECLARE
            tname varchar2(50);
            nCount NUMBER;
        BEGIN
            TNAME:='ROOM_BOOKING_DB';
            SELECT count(*) into nCount FROM user_tables where table_name = TNAME;
            IF(nCount > 0)
            
            THEN
                    DBMS_OUTPUT.PUT_LINE('TABLE '||TNAME || ' ALREADY EXISTS.');
            ELSE
            -- call to table creation stored procedure 
                begin 
                 ROOM_BOOKING_creation;
                end;    
            DBMS_OUTPUT.PUT_LINE('TABLE ' || TNAME ||' CREATED.');
            
            END IF;
            exception 
              when no_data_found then
               dbms_output.put_line('Table '||TNAME ||' doesnt exits! So we created one');
               
               -- call to table creation stored procedure 
               begin 
                 ROOM_BOOKING_creation;
                end; 
                
                when others
                    then
                    dbms_output.put_line('Something went wrong!');
                    dbms_output.put_line(dbms_utility.format_error_stack);
    END;
    /  
    
    create or replace procedure insrt_ROOM_BOOKING_DB(BKNG_ID IN NUMBER ,GUEST_ID IN NUMBER , NO_OF_GUEST IN NUMBER,ROOM_TYP_ID IN NUMBER,AMOUNT IN FLOAT,AMENITY_ID IN NUMBER,BKNG_TYP_ID IN NUMBER,HOTEL_ID IN NUMBER,NO_OF_ROOM IN NUMBER,IS_MAIN IN CHAR)
         as
          begin
          
                 dbms_output.put_line('----------------------------------------------------------');
                insert into ROOM_BOOKING_DB(BKNG_ID  ,GUEST_ID  , NO_OF_GUEST,ROOM_TYP_ID,AMOUNT,AMENITY_ID,BKNG_TYP_ID,HOTEL_ID,NO_OF_ROOM,IS_MAIN) values (BKNG_ID  ,GUEST_ID  , NO_OF_GUEST,ROOM_TYP_ID,AMOUNT,AMENITY_ID,BKNG_TYP_ID,HOTEL_ID,NO_OF_ROOM,IS_MAIN);
             dbms_output.put_line('Row inserted at ROOM table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            exception
            WHEN DUP_VAL_ON_INDEX
                then
                dbms_output.put_line('Oops! This record already exists');
                ROLLBACK;
                when others then
                    dbms_output.put_line('Error while inserting data in Room BOOKING Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');
            end insrt_ROOM_BOOKING_DB;
     /
     
     
     
EXECUTE insrt_ROOM_BOOKING_DB(1  ,1  , 5,1,76,1,1,1,3,'Y');



--SELECT * FROM ROOM_BOOKING_DB;
 