SET SERVEROUTPUT ON;

---------------------------------------------------- LOCATION TABLE  -------------------------------------------
    -- TABLE CREATION PROCEDURE
    create or replace procedure location_creation is
    table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='CREATE TABLE LOCATION(
                            LOCATION_ID  NUMBER GENERATED BY DEFAULT AS IDENTITY,
                            STATE VARCHAR(8) NOT NULL,
                            CITY VARCHAR(50),
                            ZIPCODE VARCHAR(5) NOT NULL UNIQUE,
                            constraint pk_loc_id PRIMARY KEY(LOCATION_ID)
                    )';
       EXECUTE IMMEDIATE table_name;
    end location_creation;
    /
    
      DECLARE
            table_name varchar2(50);
            nCount NUMBER;
        BEGIN
            table_name:='LOCATION';
            SELECT count(*) into nCount FROM user_tables where table_name = 'LOCATION';
            IF(nCount > 0)
            
            THEN
                    DBMS_OUTPUT.PUT_LINE('TABLE '|| table_name ||' ALREADY EXISTS.');
            ELSE
            -- call to table creation stored procedure 
                begin 
                 location_creation;
                end;    
            DBMS_OUTPUT.PUT_LINE('TABLE ' ||table_name ||' CREATED');
            
            END IF;
            exception 
              when no_data_found then
               dbms_output.put_line('table doesnt exits!, So we created one');
               
               -- call to table creation stored procedure 
               begin 
                 location_creation;
                end; 
                
                when others
                    then
                    dbms_output.put_line('Something went wrong!');
                    dbms_output.put_line(dbms_utility.format_error_stack);
    END;
    /  
    
     create or replace procedure insrt_location(state_name in varchar, city_name in varchar, zipcode in varchar)
         as
          begin
                 dbms_output.put_line('----------------------------------------------------------');
                insert into  LOCATION(state, city, zipcode) values (state_name, city_name, zipcode);
             dbms_output.put_line('Row inserted at Location table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            exception
                WHEN DUP_VAL_ON_INDEX
                then
                dbms_output.put_line('Oop! This record already exists');
                rollback;
                when others then
                    dbms_output.put_line('Error while inserting data in Location Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');
            end insrt_location;
     /
    
    execute insrt_location('MA','Boston','02115');
    execute insrt_location('TX','DALLAS','04567');
    execute insrt_location('CA','SAN JOSE','08921');
    execute insrt_location('NY','NY CITY','01209');
    
    select * from LOCATION;

    ---------------------------------------------------- HOTEL TABLE  -------------------------------------------

    -- TABLEC REATION PROCEDURE
    create or replace procedure hotel_creation is
    table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='CREATE TABLE HOTEL(
                            HOTEL_ID  NUMBER GENERATED BY DEFAULT AS IDENTITY,
                            HOTEL_NAME VARCHAR2(255) NOT NULL UNIQUE,
                            LOCATION_ID NUMBER,
                            RATING VARCHAR2(50),
                            constraint pk_htl_id PRIMARY KEY(HOTEL_ID),
                            constraint fk_loc_id FOREIGN KEY(LOCATION_ID) REFERENCES location (location_id)
                           
                    )';
       EXECUTE IMMEDIATE table_name;
    end hotel_creation;
    /
    
      DECLARE
            table_name varchar2(50);
            nCount NUMBER;
        BEGIN
            table_name:='HOTEL';
            SELECT count(*) into nCount FROM user_tables where table_name = 'HOTEL';
            IF(nCount > 0)
            
            THEN
                    DBMS_OUTPUT.PUT_LINE('TABLE '|| table_name ||' ALREADY EXISTS.');
            ELSE
            -- call to table creation stored procedure 
                begin 
                 hotel_creation;
                end;    
            DBMS_OUTPUT.PUT_LINE('TABLE' ||table_name ||' CREATED');
            
            END IF;
            exception 
              when no_data_found then
               dbms_output.put_line('table doesnt exits!, So we created one');
               
               -- call to table creation stored procedure 
               begin 
                 hotel_creation;
                end; 
                
                when others
                    then
                    dbms_output.put_line('Something went wrong!');
                    dbms_output.put_line(dbms_utility.format_error_stack);
    END;
    /  
    
     create or replace procedure insrt_hotel(hotel_name in varchar, location_id_name in number, rating in varchar)
         as
          begin
                 dbms_output.put_line('----------------------------------------------------------');
                insert into  HOTEL(HOTEL_NAME, LOCATION_ID, RATING) values (hotel_name, location_id_name, rating);
             dbms_output.put_line('Row inserted at HOTEL table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            exception
                WHEN DUP_VAL_ON_INDEX
                then
                dbms_output.put_line('Oop! This record already exists');
                rollback;
                when others then
                    dbms_output.put_line('Error while inserting data in Location Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');
            end insrt_hotel;
     /
    
    execute insrt_hotel('Hyatt Regency',1,'3 Star');
    execute insrt_hotel('Hyatt Grand',2,'4 Star');
    execute insrt_hotel('Andaz West Hollywood',3,'3 Star');
    execute insrt_hotel('Grand Hyatt DFW',4,'3 Star');

    select * from hotel;

    ---------------------------------------------------- DISCOUNT TABLE  -------------------------------------------

 -- TABLE CREATION PROCEDURE
    create or replace procedure discount_creation is
    table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='CREATE TABLE DISCOUNT(
                            disc_id  NUMBER GENERATED BY DEFAULT AS IDENTITY,
                            disc_value NUMBER NOT NULL UNIQUE,
                            constraint pk_discount_id PRIMARY KEY(disc_id)
                    )';
       EXECUTE IMMEDIATE table_name;
    end discount_creation;
    /
    
      DECLARE
            table_name varchar2(50);
            nCount NUMBER;
        BEGIN
            table_name:='DISCOUNT';
            SELECT count(*) into nCount FROM user_tables where table_name = 'DISCOUNT';
            IF(nCount > 0)
            
            THEN
                    DBMS_OUTPUT.PUT_LINE('TABLE '|| table_name||' ALREADY EXISTS.');
            ELSE
            -- call to table creation stored procedure 
                begin 
                 discount_creation;
                end;    
             DBMS_OUTPUT.PUT_LINE('TABLE '||table_name||' CREATED.');
            
            END IF;
            exception 
              when no_data_found then
               dbms_output.put_line('table doesnt exits!, So we created one');
               
               -- call to table creation stored procedure 
               begin 
                 discount_creation;
                end; 
                
                when others
                    then
                    dbms_output.put_line('Something went wrong!');
                    dbms_output.put_line(dbms_utility.format_error_stack);
    END;
    /  
    
     create or replace procedure insrt_discount(disc_value_name in number)
         as
          begin
                 dbms_output.put_line('----------------------------------------------------------');
                insert into DISCOUNT(disc_value) values (disc_value_name);
             dbms_output.put_line('Row inserted at Discount table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            exception
                WHEN DUP_VAL_ON_INDEX
                then
                dbms_output.put_line('Oop! This record already exists');
                rollback;
                when others then
                    dbms_output.put_line('Error while inserting data in Location Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');
            end insrt_discount;
     /
    
    execute insrt_discount(10);
    execute insrt_discount(15);
    execute insrt_discount(20);
    execute insrt_discount(30);
    execute insrt_discount(40);
    execute insrt_discount(50);
    
    select * from discount;

---------------------------------------------------- MEMBER TABLE  -------------------------------------------
     -- TABLE CREATION PROCEDURE
    create or replace procedure member_table_creation is
    table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='create table MEMBER(  
                      mem_id NUMBER GENERATED BY DEFAULT AS IDENTITY,  
                      mem_type varchar2(16) NOT NULL unique,
                      mem_renew_date date DEFAULT (sysdate) NOT NULL,
                      disc_id number NOT NULL,
                      constraint pk_mem_id primary key(mem_id),
                      constraint fk_member_id FOREIGN KEY (disc_id) REFERENCES discount (disc_id)
                    )';
       EXECUTE IMMEDIATE table_name;
    end member_table_creation;
    /
    
  DECLARE
        tname varchar2(50);
        nCount NUMBER;
    BEGIN
        tname := 'MEMBER';
        SELECT count(*) into nCount FROM user_tables where table_name = tname;
        IF(nCount > 0)
        
        THEN
               DBMS_OUTPUT.PUT_LINE('TABLE '|| tname ||' ALREADY EXISTS.');
        ELSE
        -- call to table creation stored procedure 
            begin 
             member_table_creation;
            end;    
         DBMS_OUTPUT.PUT_LINE('TABLE '|| tname ||' CREATED.');
        
        END IF;
        exception 
          when no_data_found then
           dbms_output.put_line('table doesnt exits!, So we created one');
           
           -- call to table creation stored procedure 
           begin 
             member_table_creation;
            end; 
            
            when others
                then
                DBMS_OUTPUT.PUT_LINE(nCount);
                dbms_output.put_line('Something went wrong!');
                dbms_output.put_line(dbms_utility.format_error_stack);
END;
/  

   create or replace procedure insrt_member(mem_type in varchar, mem_renew_date in date, disc_id in number)
         as
          begin
                 dbms_output.put_line('----------------------------------------------------------');
                insert into MEMBER(mem_type, mem_renew_date, disc_id) values (mem_type, mem_renew_date, disc_id);
             dbms_output.put_line('Row inserted at Member table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            exception
            WHEN DUP_VAL_ON_INDEX
                then
                dbms_output.put_line('Oop! This record already exists');
                rollback;
                when others then
                    dbms_output.put_line('Error while inserting data in Member Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');
            end insrt_member;
     /
    
    execute insrt_member('PLATINUM',TO_DATE('2022/05/11 23:59:59', 'yyyy/mm/dd hh24:mi:ss'),5);
    execute insrt_member('SUPER PLATINUM',TO_DATE('2022/05/03 23:59:59', 'yyyy/mm/dd hh24:mi:ss'),4);
    execute insrt_member('GOLD',TO_DATE('2022/05/17 23:59:59', 'yyyy/mm/dd hh24:mi:ss'),2);
    execute insrt_member('SILVER',TO_DATE('2022/05/22 23:59:59', 'yyyy/mm/dd hh24:mi:ss'),1);
    
    select * from member;

---------------------------------------------------- PREFERENCES TABLE  -------------------------------------------

 -- TABLE CREATION PROCEDURE
    create or replace procedure preferences_creation is
        table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='create table PREFERENCES(  
                        prf_id NUMBER GENERATED BY DEFAULT AS IDENTITY,  
                        preferences varchar2(255) NOT NULL,
                        constraint pk_prf_id primary key (prf_id)  
                    )';
    EXECUTE IMMEDIATE table_name;
    end preferences_creation;
    /
    
 -- Drop table preferences;  
    
  DECLARE
        tname varchar2(50);
        nCount NUMBER;
    BEGIN
        tname := 'PREFERENCES';
        SELECT count(*) into nCount FROM user_tables where table_name = tname;
        IF(nCount > 0)
        
        THEN
                DBMS_OUTPUT.PUT_LINE('TABLE '||tname ||' ALREADY EXISTS.');
          
        ELSE
        
        -- call to table creation stored procedure 
            begin 
             preferences_creation;
                      DBMS_OUTPUT.PUT_LINE('TABLE '|| tname ||' CREATED.');
            end;    
   
        END IF;
        exception 
          when no_data_found then
           dbms_output.put_line('table doesnt exits!, So we created one');
           
           -- call to table creation stored procedure 
           begin 
             preferences_creation;
            end; 
            
            when others
                then
                dbms_output.put_line('Something went wrong!');
                dbms_output.put_line(dbms_utility.format_error_stack);
END;
/  

create or replace procedure insrt_preferences(preferences_name in varchar)
         as
          begin
                 dbms_output.put_line('----------------------------------------------------------');
                insert into PREFERENCES(preferences) values (preferences_name);
             dbms_output.put_line('Row inserted at Location table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            
            exception
                when others then
                    dbms_output.put_line('Error while inserting data in PREFERENCES Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');
            end insrt_preferences;
     /
    
    execute insrt_preferences('Guest loves to smoke');
    execute insrt_preferences('Guests Need newspaper every Morning');
    execute insrt_preferences('Guest is allergic to pets');
    execute insrt_preferences('Guest wants rooms with windows facing the pool');
    
    select * from PREFERENCES;

---------------------------------------------------- GUEST TABLE  -------------------------------------------

-- TABLEC REATION PROCEDURE
    create or replace procedure guest_creation is table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='create table GUEST(  
                    guest_id  NUMBER GENERATED BY DEFAULT AS IDENTITY,  
                    guest_name varchar2(50) NOT NULL,
                    DOB date NOT NULL,
                    ph_num varchar2(16) NOT NULL,
                    email varchar2(255),
                    mem_id number,
                    vip_status varchar(8),
                    gender varchar(8) NOT NULL,
                    prf_id  number,
                    primary key (guest_id),
                    constraint unique_PHONE UNIQUE (PH_NUM),
                    constraint fk_prf_id FOREIGN KEY (prf_id) REFERENCES PREFERENCES(prf_id),
                    constraint fk_mem_id FOREIGN KEY (mem_id) REFERENCES MEMBER(mem_id),
                    CHECK(REGEXP_LIKE(email,''^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$'')),
                    CHECK(REGEXP_LIKE(ph_num,''^[0-9]{10}$''))
                    )';
       EXECUTE IMMEDIATE table_name;
    end guest_creation;
    /
    
      DECLARE
            tname varchar2(50);
            nCount NUMBER;
        BEGIN
            tname:='GUEST';
             SELECT count(*) into nCount FROM user_tables where table_name = tname;
            IF(nCount > 0)
            
            THEN
                    DBMS_OUTPUT.PUT_LINE('TABLE '|| tname || ' ALREADY EXISTS.');
            ELSE
            -- call to table creation stored procedure 
                begin 
                 guest_creation;
                end;    
            DBMS_OUTPUT.PUT_LINE('TABLE ' || tname ||' CREATED.');
            
            END IF;
            exception 
              when no_data_found then
               dbms_output.put_line('Table '||tname ||' doesnt exits! So we created one');
               
               -- call to table creation stored procedure 
               begin 
                 guest_creation;
                end; 
                
                when others
                    then
                    dbms_output.put_line('Something went wrong!');
                    dbms_output.put_line(dbms_utility.format_error_stack);
    END;
    /  
    
    create or replace procedure insrt_guest(GUEST_NAME in varchar,DOB IN DATE, PH_NUM IN VARCHAR, EMAIL IN VARCHAR2,MEM_ID IN NUMBER, VIP_STATUS IN VARCHAR,GENDER IN VARCHAR, PRF_ID IN VARCHAR)
         as
          begin
          
                 dbms_output.put_line('----------------------------------------------------------');
                insert into GUEST(GUEST_NAME , DOB , PH_NUM, EMAIL,MEM_ID, VIP_STATUS,GENDER, PRF_ID) values (GUEST_NAME  ,DOB  , PH_NUM  , EMAIL,MEM_ID, VIP_STATUS,GENDER, PRF_ID);
             dbms_output.put_line('Row inserted at GUEST table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            exception
            WHEN DUP_VAL_ON_INDEX
                then
                dbms_output.put_line('Oops! This record already exists');
                rollback;
                when others then
                    dbms_output.put_line('Error while inserting data in GUEST Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');
            end insrt_guest;
     /
    
    execute insrt_guest('PUJA','24 MAY 1996','9851024784','PUZA@GMAIL.COM',4,'VIP-3','FEMALE',1);
    execute insrt_guest('NARENDRA MODI',TO_DATE('1950/08/17', 'yyyy/mm/dd'),'6177927768','NARENDRA.MODI@GMAIL.COM',2,'VIP-1','MALE',2);
    execute insrt_guest('AMIR KHAN',TO_DATE('1965/03/14', 'yyyy/mm/dd'),'8899223344','AMIR@GMAIL.COM',1,'VIP-2','MALE',4);
    execute insrt_guest('MONISH M.',TO_DATE('1995/06/14', 'yyyy/mm/dd'),'1122334455','MONISH@GMAIL.COM',NULL,2,'MALE',NULL);
    execute insrt_guest('JATIN BALI',TO_DATE('1998/05/17', 'yyyy/mm/dd'),'4455667788','JATIN@GMAIL.COM',NULL,NULL,'MALE',3);
    execute insrt_guest('KHUSHBU T',TO_DATE('1994/01/14', 'yyyy/mm/dd'),'5533116688','KHUSHBU@GMAIL.COM',NULL,NULL,'FEMALE',NULL);

    SELECT * FROM GUEST;
    
    