SET SERVEROUTPUT ON;
    
    -- TABLEC REATION PROCEDURE
    create or replace procedure amenity_creation is table_name varchar2(4000);
   
    BEGIN
    -- table creation query
       table_name:='CREATE TABLE AMENITY_DB(
                    AMENITY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY ,
                    AMENITY_NAME VARCHAR(16) UNIQUE NOT NULL,
                    AMENITY_PRICE FLOAT(5) NOT NULL,
                    IS_PRSN_SPC CHAR(1) NOT NULL,
                    --constraint unique_PHONE UNIQUE (AMENITY_NAME),
                    --CONSTRAINT (CTR_AMENITY)
                    primary key(AMENITY_ID)
                    )';
       EXECUTE IMMEDIATE table_name;
    end amenity_creation;
    /
    
      DECLARE
            tname varchar2(50);
            nCount NUMBER;
        BEGIN
            TNAME:='AMENITY_DB';
            SELECT count(*) into nCount FROM user_tables where table_name = TNAME;
            IF(nCount > 0)
            
            THEN
                    DBMS_OUTPUT.PUT_LINE('TABLE '||TNAME || ' ALREADY EXISTS.');
            ELSE
            -- call to table creation stored procedure 
                begin 
                 amenity_creation;
                end;    
            DBMS_OUTPUT.PUT_LINE('TABLE ' || TNAME ||' CREATED.');
            
            END IF;
            exception 
              when no_data_found then
               dbms_output.put_line('Table '||TNAME ||' doesnt exits! So we created one');
               
               -- call to table creation stored procedure 
               begin 
                 amenity_creation;
                end; 
                
                when others
                    then
                    dbms_output.put_line('Something went wrong!');
                    dbms_output.put_line(dbms_utility.format_error_stack);
    END;
    /  
    
     create or replace procedure insrt_amenity(amenity_name in varchar, price in varchar, prsn_spc in varchar)
         as
          begin
             dbms_output.put_line('----------------------------------------------------------');
             insert into AMENITY_DB(amenity_name, amenity_price, IS_PRSN_SPC) values (amenity_name, price, prsn_spc);
             dbms_output.put_line('Row inserted at Amenity table');
                 dbms_output.put_line('----------------------------------------------------------');
            commit;
            exception
            WHEN DUP_VAL_ON_INDEX
            then
            dbms_output.put_line('OOPS! DUPLICATE VALUE FOUND CANNOT INSERT THIS ROW.');

                when others then
                    dbms_output.put_line('Error while inserting data in Amenity Table');
                    rollback;
                    dbms_output.put_line('The error encountered is: ');
                    dbms_output.put_line(dbms_utility.format_error_stack);
                    dbms_output.put_line('----------------------------------------------------------');

            end insrt_amenity;
     /
    
    execute insrt_amenity('Swimming',8000,'y');
    
    --select * from amenity_db;
--    drop table Amenity_db;